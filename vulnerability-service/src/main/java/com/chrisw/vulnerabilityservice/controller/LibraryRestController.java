package com.chrisw.vulnerabilityservice.controller;

import com.chrisw.vulnerabilityservice.model.library.Library;
import com.chrisw.vulnerabilityservice.service.LibraryService;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.net.MalformedURLException;
import java.util.List;


@RestController
public class LibraryRestController {

    private final LibraryService libraryService;

    public LibraryRestController(LibraryService libraryService) {
        this.libraryService = libraryService;
    }

    @GetMapping("/libraries")
    public List<Library> getAll() {
        return libraryService.findAll();
    }

    @GetMapping("/library/{id}")
    public Library findById(@PathVariable final long id) throws MalformedURLException {
        return libraryService.findById(id);
    }

    @PutMapping("/library/{id}")
    public Library updateById(@Validated @PathVariable final long id, @RequestBody Library lib) {
        return libraryService.update(id, lib);
    }

    @DeleteMapping("/library/{id}")
    public void deleteById(@PathVariable final long id) {
        libraryService.deleteById(id);
    }

    @PostMapping("/library")
    public Library add(@Validated @RequestBody Library lib) {
        return libraryService.add(lib);
    }


}
