package com.chrisw.vulnerabilityservice.service;

import com.chrisw.vulnerabilityservice.model.library.Library;
import com.chrisw.vulnerabilityservice.repo.LibraryRepo;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import java.util.List;
import java.util.Optional;

@Service
public class LibraryService {

    private final LibraryRepo libraryRepo;

    public LibraryService(LibraryRepo libaryRepo) {
        this.libraryRepo = libaryRepo;
    }

    private final String LIB_NOT_FOUND = "Library with id %s not found";

    public List<Library> findAll() {
        return libraryRepo.findAll();
    }

    public Library findById(long id) {
        return libraryRepo.findById(id)
                .orElseThrow(() -> {
                    return new ResponseStatusException(HttpStatus.NOT_FOUND, String.format(LIB_NOT_FOUND,id));
                });
    }

    public Library add(Library lib) {
        if (lib.getId() != 0) {
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST,  "id can not be present when creating a new entity");
        }
        return libraryRepo.save(lib);
    }

    public Library update(long id, Library lib) {
        Optional<Library> optionalLibrary = libraryRepo.findById(id);
        if (!optionalLibrary.isPresent()){
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, String.format(LIB_NOT_FOUND,id));
        }
        lib.setId(id);
        return libraryRepo.save(lib);
    }

    public void deleteById(long id) {
        if (!libraryRepo.existsById(id)) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, String.format(LIB_NOT_FOUND,id));
        }
        libraryRepo.deleteById(id);
    }

}
